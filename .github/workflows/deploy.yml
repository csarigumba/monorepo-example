name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - production

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'
  TERRAFORM_VERSION: '1.6.0'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run CI checks
      run: |
        pnpm lint
        pnpm typecheck
        pnpm test

    - name: Build application
      run: pnpm build

    - name: Deploy to AWS
      run: |
        chmod +x ./scripts/deploy.sh
        ./scripts/deploy.sh --environment ${{ github.event.inputs.environment || 'dev' }} --auto-approve
      env:
        TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        TF_VAR_aws_region: ${{ vars.AWS_REGION }}

    - name: Post deployment tests
      run: |
        # Add any post-deployment tests here
        echo "Running post-deployment tests..."
        # Example: curl tests against the deployed API
        
    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: |
          Deployment to ${{ github.event.inputs.environment || 'dev' }} ${{ job.status }}
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: env.SLACK_WEBHOOK_URL